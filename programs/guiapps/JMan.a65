	.(

	.al
	.xl
	
	.include	<kern.i65>
	.include	<win.i65>	
	.include	<stdio.i65>
	.include	<widget.i65>
	.include	<font.i65>
	.include	<lcc.i65>

	.struct JMan_,JCnt_SIZE
Label	.long 4
Flags	.word 2
ButAbsX	.word 2
ButAbsY	.word 2
DragX	.word 2
DragY	.word 2
Flags2	.word 2
RestX	.word 2
RestY	.word 2
RestXS	.word 2
RestYS	.word 2
DragType .word 2
Region	.word 2
SIZE	= *
	.stend

MJMan_SIZE	= MJCnt_SIZE

JManF_Dragging	= 1
JManF_Maximised	= 2

	.text
	
/*-----------------------------------------------
  Window Manager Widget Methods - Inherits JWin
------------------------------------------------*/


&_JManInit	.(

	.abs 1
IcoP	.long 4
FromLeft .word 2
LZ	= *-1
	.dsb 5

Self	.long 4
Label	.long 4
CFlags	.word 2
Region	.word 2

	.text
	!PRO LZ
	lda Self
	ora Self+2
	bne alrg
	lda _JManClass+2
	pha
	lda _JManClass
	pha
	jsr @_JNew
	!POP 4
	stx Self
	sty Self+2
alrg	pei (Self+2)
	pei (Self)
	jsr @_JCntInit
	!POP 4
	ldy #JW_Flags
	lda [Self],y
	and #$ffff-JF_Selectable|JF_Selected|JF_Focused
	sta [Self],y
	ldy #JCnt_LayFlags
	lda #LAYF_Right
	sta [Self],y
	lda #24
	ldy #JW_MinXS
	sta [Self],y
	ldy #JW_MinYS
	sta [Self],y
	pei (Label+2)
	pei (Label)
	jsr @_strdup
	pla
	pla
	tya
	ldy #JMan_Label+2
	sta [Self],y
	txa
	dey
	dey
	sta [Self],y
	
	lda Region
	ldy #JMan_Region
	sta [Self],y
	pei (Self+2)
	pei (Self)
	jsr @_JWRealise
	!POP 4
	lda CFlags
	ldy #JMan_Flags
	sta [Self],y
	
	lda #CMD_CLOSE
	ldx #!ButClose
	ldy #^ButClose
	jsr doBut
	lda CFlags
	and #REGPF_Resizable
	beq norsz
	lda #CMD_MAX
	ldx #!ButMax
	ldy #^ButMax
	jsr doBut
norsz	lda #CMD_MINI
	ldx #!ButMini
	ldy #^ButMini
	jsr doBut	
   
exeet	ldx Self
	ldy Self+2
	!POST LZ
	rtl


doBut	pha
	pea 0
	pea 0
	phy
	phx
	pea 8
	pea 8
	pea 0
	pea 0
	jsr @_JIbtInit
	!POP 16
	stx IcoP
	sty IcoP+2
	pla
	ldy #JIbt_ExtData
	sta [IcoP],y
	
	pei (Self+2)
	pei (Self)
	pei (IcoP+2)
	pei (IcoP)
	jsr @_JWSetData
	!POP 8
	
	pei (IcoP+2)
	pei (IcoP)
	pei (Self+2)
	pei (Self)
	jsr @_JCntAdd
	!POP 8
	
	ldy #JBut_Clicked
	lda #!JManClicked
	sta [IcoP],y
	iny
	iny
	lda #^JManClicked
	sta [IcoP],y
	rts 

	.)
	
&JManClicked
	.(
	.abs 1
WinP	.long 4
LZ	= *-1
	.dsb 5
Self	.long 4

	.text
	!PRO LZ
	pei (Self+2)
	pei (Self)
	jsr @_JWGetData
	!POP 4
	stx WinP
	sty WinP+2
	ldy #JIbt_ExtData
	lda [Self],y
	pha
	pea 0
	pei (WinP+2)
	pei (WinP)
	jsr @_JManDefault
	!POP 8
	!POST LZ
	rtl
		
	.)	

&_JManDefault .(
	.abs 1
CloseEv	.dsb EV_SIZE
ClData	.word 2
LZ	= *-1
	.dsb 5
Self	.long 4
Type	.word 2
Value	.word 2
Ptr	.long 4

	.text
	!PRO LZ
	lda Value
	cmp #CMD_CLOSE
	bne noclose
	ldy #JW_RegID
	lda [Self],y
	sta CloseEv+EV_Sender
	ldy #JMan_Region
	lda [Self],y
	sta CloseEv+EV_Recver
	lda #2
	sta CloseEv+EV_DataSz
	lda #EVS_User
	sta CloseEv+EV_SubType
	lda #WEV_Notice
	sta CloseEv+EV_Type
	lda #CMD_CLOSE
	sta ClData
	pea 0
	tdc
	clc
	adc #ClData
	pha
	pea 0
	tdc
	inc
	pha
	jsr @_JPost
	!POP 8
	!jra exeet
noclose	cmp #CMD_MAX
	beq ismax
	brl nomax
ismax	ldy #JMan_Flags2
	lda [Self],y
	and #JManF_Maximised
	beq domax
	ldy #JMan_RestYS
	lda [Self],y
	pha
	ldy #JMan_RestXS
	lda [Self],y
	pha
	ldy #JMan_RestY
	lda [Self],y
	pha
	ldy #JMan_RestX
	lda [Self],y
	pha
	bra backmax
	
domax	ldy #JW_X
	lda [Self],y
	ldy #JMan_RestX
	sta [Self],y
	ldy #JW_Y
	lda [Self],y
	ldy #JMan_RestY
	sta [Self],y
	ldy #JW_XSize
	lda [Self],y
	ldy #JMan_RestXS
	sta [Self],y
	ldy #JW_YSize
	lda [Self],y
	ldy #JMan_RestYS
	sta [Self],y
	pea 200
	pea 320
	pea 0
	pea 0
backmax	pei (Self+2)
	pei (Self)
	jsr @_JWSetBounds
	!POP 12
	ldy #JMan_Flags2
	lda [Self],y
	eor #JManF_Maximised
	sta [Self],y
	pei (Self+2)
	pei (Self)
	jsr resClient
	pla
	pla
	bra exeet
nomax
exeet	!POST LZ
	rtl
	
	.)
	
&_JManDraw	.(

	.abs 1
X8	.word 2
X82	.word 2
LZ	= *-1
	.dsb 5

Self	.long 4

	.text
	!PRO LZ	
	pea 0
	pea 0
	ldy #JMan_Label+2
	lda [Self],y
	pha
	dey
	dey
	lda [Self],y
	pha
	jsr @_FL_extStrX
	!POP 8
	txa
	lsr
	lsr
	lsr
	inc
	sta X82
	
	ldy #JW_XSize
	lda [Self],y
	lsr
	lsr
	lsr
	sta X8
	dec
	dec
	sec
	sbc X82
	pha
	ldy #JW_Flags
	lda [Self],y
	and #JF_Focused
	tax
	bne isfoc
	pea $fb
	bra gotc
isfoc	pea $e6
gotc	pei (X82)
	txa
	bne isfoc2
	pea $fb
	bra gotc2
isfoc2	pea $16
gotc2	pei (X8)
	pea ^WndChars
	pea !WndChars
	pea ^WndStr
	pea !WndStr
	jsr @_GfxString
	!POP 18

	pea 8
	pea 0
	jsr @_GfxSetPen
	pla
	pla
	
	ldx #8
	ldy #JMan_Flags
	lda [Self],y
	and #REGPF_Resizable
	beq norsz
	ldy #JMan_Flags2
	lda [Self],y
	and #JManF_Maximised
	bne norsz
	inx
norsz	phx
	lda X8
	dec
	dec
	pha
	lda X8
	dec
	dec
	pha
	ldy #JW_YSize
	lda [Self],y
	lsr
	lsr
	lsr
	dec
	dec
	pha
	pea $bf
	lda 3,s	; y-2
	inc
	pha
	pei (X8)
	pea ^WndChars
	pea !WndChars
	pea ^WndStr2
	pea !WndStr2
	jsr @_GfxString
	tsc
	clc
	adc #22
	tcs
	
/*	ldy #JW_Flags
	lda [Self],y
	and #JF_Focused
	beq nofoc
	
	pea FNTS_Bold
	jsr @_GfxStyle
	pla */
	
nofoc	pea GMOD_SameBack|GMOD_SamePen
	jsr @_GfxSetMode
	pla
	
	ldy #JMan_Label+2
	lda [Self],y
	pha
	dey
	dey
	lda [Self],y
	pha
	
	pea 0
	pea 0
	jsr @_FL_extYab
	pla
	pla
	inx
	inx
	phx
	pea 9
	jsr @_GfxSetPen
	pla
	pla
	jsr @_GfxText
	!POST LZ+4
	rtl
	
	
WndStr	.byte GFX_Charset,"%D%b",1
	.byte CHAR_Col,"%b"
	.byte 1,CHAR_Rep,"%b",0, CHAR_Col,"%b", CHAR_Rep,"%b",2
	.byte CHAR_End
	.byte "%E"
	
WndStr2	.byte GFX_Charset,"%D%b%b"
	.byte CHAR_Col,"%b"
	.byte CHAR_YRep,"%b"
	.byte 4,CHAR_Skip,"%b",5
	.byte CHAR_YEnd
	.byte 6,CHAR_Rep,"%b",7,"%b"
	.byte CHAR_End
	.byte "%E"
	
	.)

&_JManButton .(
	.abs 1
LZ	= *-1
	.dsb 5
Self	.long 4
SubType	.word 2
X	.word 2
Y	.word 2
XAbs	.word 2
YAbs	.word 2
	.text
	
	!PRO LZ
	ldy #JW_Flags
	lda [Self],y
	and #JF_Focused
	bne nofoc
	pei (Self+2)
	pei (Self)
	jsr @_JManDoFocus
	!POP 4
nofoc	lda SubType
	cmp #EVS_But1Down
	beq isbutd
nomove2	brl nobutdown
isbutd	ldy #JMan_Flags2
	lda [Self],y
	and #JManF_Maximised
	bne nomove2
	lda Y
	cmp #8
	bcs notop
	ldy #JW_X
	lda [Self],y
	ldy #JMan_DragX
	sta [Self],y
	ldy #JW_Y
	lda [Self],y
	ldy #JMan_DragY
	sta [Self],y
	lda #0
	bra gotype
notop	ldy #JMan_Flags
	lda [Self],y
	and #REGPF_Resizable
	beq nobutdown
	ldy #JW_XSize
	lda [Self],y
	sec
	sbc #8
	cmp X
	beq okX
	bpl nobutdown
okX	ldy #JW_YSize
	lda [Self],y
	sec
	sbc #8
	cmp Y
	beq okY
	bpl nobutdown
okY	ldy #JW_XSize
	lda [Self],y
	ldy #JMan_DragX
	sta [Self],y
	ldy #JW_YSize
	lda [Self],y
	ldy #JMan_DragY
	sta [Self],y
	lda #1
gotype	ldy #JMan_DragType
	sta [Self],y
	ldy #JMan_Flags2
	lda [Self],y
	ora #JManF_Dragging
	sta [Self],y
	pea 1
	pea WEV_MotionBut
	pei (Self+2)
	pei (Self)
	jsr @_JWSense
	!POP 8
	pea 1
	pei (Self+2)
	pei (Self)
	jsr @_JWMouFoc
	!POP 6
	lda XAbs
	ldy #JMan_ButAbsX
	sta [Self],y
	lda YAbs
	ldy #JMan_ButAbsY
	sta [Self],y
	bra nomove
	
nobutdown	
	ldy #JMan_Flags2
	lda [Self],y
	and #$ffff-JManF_Dragging
	sta [Self],y
	pea 0
	pea WEV_MotionBut
	pei (Self+2)
	pei (Self)
	jsr @_JWSense
	!POP 8
	pei (Self+2)
	pei (Self)
	jsr @_JWMouUnfoc
	!POP 4
nomove	!POST LZ
	rtl
	
	.)

&_JManMotion .(

	.abs 1
OffX	.word 2
OffY	.word 2
LZ	= *-1
	.dsb 5
Self	.long 4
Type	.word 2
X	.word 2
Y	.word 2
XAbs	.word 2
YAbs	.word 2
	.text
	
	!PRO LZ
	lda Type
	cmp #WEV_MotionBut
	!jne nomobut
	ldy #JMan_Flags2
	lda [Self],y
	and #JManF_Dragging
	!jeq nomobut
	lda XAbs
	sec
	ldy #JMan_ButAbsX
	sbc [Self],y
	and #$ffff-7
	bpl okx
	clc
	adc #8
okx	sta OffX
	lda YAbs
	sec
	ldy #JMan_ButAbsY
	sbc [Self],y
	and #$ffff-7
	bpl oky
	clc
	adc #8
oky	sta OffY
	ldy #JMan_DragType
	lda [Self],y
	beq ismove
	ldy #JMan_DragY
	lda [Self],y
	ldy #JW_MinYS
	clc
	adc OffY
	bmi keepy
	ldy #JW_MaxYS
	cmp [Self],y
	bcs keepy
	ldy #JW_MinYS
	cmp [Self],y
	bcs yok
keepy	lda [Self],y
yok	pha
	ldy #JMan_DragX
	lda [Self],y
	ldy #JW_MinXS
	clc
	adc OffX
	bmi keepx
	ldy #JW_MaxXS
	cmp [Self],y
	bcs keepx 
	ldy #JW_MinXS
	cmp [Self],y
	bcs xok
keepx	lda [Self],y
xok	pha
	ldy #JW_Y
	lda [Self],y
	pha
	ldy #JW_X
	lda [Self],y
	pha
	pei (Self+2)
	pei (Self)
	jsr @_JWSetBounds
	!POP 12
	!jra nomobut
ismove	ldy #JW_YSize
	lda [Self],y
	pha
	ldy #JW_XSize
	lda [Self],y
	pha
	ldy #JMan_DragY
	lda [Self],y
	clc
	adc OffY
	pha
	ldy #JMan_DragX
	lda [Self],y
	clc
	adc OffX
	pha
	pei (Self+2)
	pei (Self)
	jsr @_JWSetBounds
	!POP 12
nomobut	!POST LZ
	rtl
	
	.)

&_JManNotify
	.(
	.abs 1
LZ	= *-1
	.dsb 5
Self	.long 4
Type	.word 2
	.text
	!PRO LZ
	lda Type
	cmp #JNF_Resized
	bne nrsz
	pei (Self+2)
	pei (Self)
	jsr resClient
	!POP 4
nrsz	pei (Type)
	pei (Self+2)
	pei (Self)
	jsr @_JCntNotify
	!POP 6
exeet	!POST LZ
	rtl
	.)	

resClient	
	.(
	.abs 1
LZ	= *-1
	.dsb 4

Self	.long 4
	.text
	!PRO LZ
	ldy #JW_YSize
	lda [Self],y
	sec
	sbc #16
	pha
	ldy #JW_XSize
	lda [Self],y
	sec
	sbc #16
	pha
	pea 8
	pea 8
	ldy #JMan_Region
	lda [Self],y
	pha
	jsr @_JEGeom
	!POST LZ+10
	rts

	.)
	
&WndChars
	.dsb 8
	.byte $0,$7e,$0,$1e,$0,$6,$2,$0
	.byte $0,$cc,$88,$33,$22,$cc,$88,0
	.byte $ff,1,1,1,1,1,1,1
	.byte $80,$80,$80,$80,$80,$80,$80,$80
	.byte 1,1,1,1,1,1,1,1
	.byte $80,$80,$80,$80,$80,$80,$80,$ff
	.byte 0,0,0,0,0,0,0,$ff
	.byte 1,1,1,1,1,1,1,$ff
	.byte 1,1,$21,$15,$0d,$1d,1,$fe

ButMini	.byte $ff,$81,$81,$81,$81,$bd,$81,$ff ,$bc
ButMax	.byte $ff,$81,$bd,$bd,$a5,$bd,$81,$ff ,$bc
ButClose	.byte $ff,$81,$a5,$99,$99,$a5,$81,$ff ,$bc

	.)

