	.(

	.al
	.xl
	.pic
	
	.include	<kern.i65>
	.include	<win.i65>	
	.include	<stdio.i65>
	.include	<widget.i65>
	.include	<font.i65>
	.include	<lcc.i65>

/*-----------------------------------------------
     Window Widget Methods - Inherits JWin
------------------------------------------------*/


&_JWndInit	.(

	.abs 1
LZ	= *-1
	.dsb 5

Self	.long 4
Label	.long 4
CFlags	.word 2

	.text

	!PRO LZ
	!PRPOBJ JWnd
	pea JF_Selectable|JF_Manage
	pea 0
	pea 128
	pea 240
	pei (Self+2)
	pei (Self)
	jsr @_JWInit
	!POP 12
	lda #24
	ldy #JW_MinXS
	sta [Self],y
	ldy #JW_MinYS
	sta [Self],y
	lda #32767
	ldy #JW_MaxXS
	sta [Self],y
	ldy #JW_MaxYS
	sta [Self],y
	
	pei (Label+2)
	pei (Label)
	jsr @_strdup
	pla
	pla
	tya
	ldy #JWnd_Label+2
	sta [Self],y
	txa
	dey
	dey
	sta [Self],y
	
	lda CFlags
	ldy #JWnd_Flags
	sta [Self],y
	
	pei (Self+2)
	pei (Self)
	jsr @_JWRealise
	!POP 4		
	
	pei (Self+2)
	pei (Self)
	jsr @_JWndSetProp
	!POP 4
		
exeet	ldx Self
	ldy Self+2
	!POST LZ
	rtl

	.)


&_JWndSetProp
	.(

	.abs 1
RegProp	.dsb REGP_SIZE
LZ	= *-1
	.dsb 5

Self	.long 4
	.text

	!PRO LZ
	ldy #JWnd_Flags
	lda [Self],y
	sta RegProp+REGP_Flags
	
	ldy #JWnd_Label
	lda [Self],y
	sta RegProp+REGP_Name
	iny
	iny
	lda [Self],y
	sta RegProp+REGP_Name+2
	
	ldy #JW_MinXS
	lda [Self],y
	sta RegProp+REGP_MinX
	ldy #JW_MinYS
	lda [Self],y
	sta RegProp+REGP_MinY
	ldy #JW_MaxXS
	lda [Self],y
	sta RegProp+REGP_MaxX
	ldy #JW_MaxYS
	lda [Self],y
	sta RegProp+REGP_MaxY
	
	stz RegProp+REGP_Icon
	stz RegProp+REGP_Icon+2
	
	pea 0
	tdc
	clc
	adc #RegProp
	pha
	ldy #JW_RegID
	lda [Self],y
	pha
	pea WIN_EditProp
	ldy #JW_Con
	lda [Self],y
	pha
	jsr @_sendCon
	!POST LZ+10
	rtl
	
	.)

&_JWndDefault .(

	rtl
	
	.)
	
&_JWndNotice 
	.(

	.abs 1
LZ	= *-1
	.dsb 5

Self	.long 4
SubType	.word 2
Sender	.word 2
DataP	.long 4
	.text

	!PRO LZ
	lda SubType
	cmp #EVS_User
	bne nothing
	lda [DataP]
	cmp #CMD_CLOSE
	bne nothing
	ldx #{MainWin
	jsr @S_segoff
	tax
	lda MainWin,x
	ora MainWin+2,x
	bne someth
exeet	pea 1
	jsr @_exit
someth	lda MainWin,x
	cmp Self
	bne justk
	lda MainWin+2,x
	cmp Self+2
	beq exeet
justk	pei (Self+2)
	pei (Self)
	jsr @_JWKill
	!POP 4
nothing	pei (DataP+2)
	pei (DataP)
	pei (SubType)
	pei (Sender)
	pei (Self+2)
	pei (Self)
	jsr @_JWNotice
	!POP 12
	!POST LZ
	rtl
	
	.)
	
&_JWndRButton .(

	.abs 1
LZ	= *-1
	.dsb 5

Self	.long 4
Type	.word 2
X	.word 2
Y	.word 2
XAbs	.word 2
YAbs	.word 2

	.text

	!PRO LZ
	lda Type
	cmp #EVS_But2Up
	bne nocl
	pei (YAbs)
	pei (XAbs)
	pei (Y)
	pei (X)
	pei (Type)
	pei (Self+2)
	pei (Self)
	ldy #JWnd_RightClick
	lda [Self],y
	tax
	iny
	iny
	lda [Self],y
	jsr @cb
	!POP 14
nocl	!POST LZ
	rtl
	
	.)
	
&_JWndDraw	.(
	
	jmp @_GfxClear
	
	.)
	
	!PRPCLASS JWnd
	
JWndMethods .(
	jmp (Methods,x)
Methods	.long _JCntInit	; Init
	.long _JCntKill	; Destory
	.long _JWndDraw	; Draw
	.long _JCntShow	; Show
	.long _JCntHide	; Hide
	.long _JCntHandle	; Handle
	.long _JCntNotify	; Notify
	.long _JCntGetHints ; Notify

	.long _JCntKeyD	; A key down
	.long _JWButton	; Button 
	.long _JWndRButton ; Right button (menu)
	.long _JWMotion ; Motion
	.long _JWBound	; Boundary
	.long _JWndNotice	; Notice

	.long _JCntAdd	; Add
	.long _JCntRemove ; Remove
	.long _JCntLayout
	.)

	.)

