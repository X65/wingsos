	.(

	.al
	.xl
	.pic
	
	.include	<kern.i65>
	.include	<win.i65>	
	.include	<stdio.i65>
	.include	<widget.i65>
	.include	<font.i65>
	.include	<lcc.i65>

/*-----------------------------------------------
     Window Widget Methods - Inherits JWin
------------------------------------------------*/
 

&_JDlgInit	.(

	.abs 1
LZ	= *-1
	.dsb 5

Self	.long 4
Label	.long 4
Modal	.word 2
CFlags	.word 2

	.text

	!PRO LZ
	!PRPOBJ JDlg
	pei (CFlags)
	pei (Label+2)
	pei (Label)
	pei (Self+2)
	pei (Self)
	jsr @_JWndInit
	!POP 10
	pea 0
	pea 0
	jsr @_JCntInit
	!POP 4
	phy
	phx
	tya
	ldy #JDlg_Top+2
	sta [Self],y
	dey
	dey
	txa
	sta [Self],y
	pei (Self+2)
	pei (Self)
	jsr @_JCntAdd
	!POP 8

	pea 0
	pea 0
	jsr @_JCntInit
	!POP 4
	phy
	phx
	tya
	ldy #JDlg_Bottom+2
	sta [Self],y
	dey
	dey
	txa
	sta [Self],y
	pei (Self+2)
	pei (Self)
	jsr @_JCntAdd
	!POP 8
	
exeet	ldx Self
	ldy Self+2
	!POST LZ
	rtl

	.)


&_JDlgAddButtons
	.(
	
	.abs 1
ButArea	.long 4
But	.long 4
upto	.word 2
LZ	= *-1
	.dsb 5
Self	.long 4
ButText	.long 4

	.text
	!PRO LZ
	ldy #JDlg_Bottom
	lda [Self],y
	sta ButArea
	iny
	iny
	lda [Self],y
	sta ButArea+2
	
	stz upto
nxone	lda upto
	asl
	asl
	tax
	lda ButText,x
	ora ButText+2,x
	!jeq nomore
	lda ButText+2,x
	pha
	lda ButText,x
	pha
	jsr @_JButStandard
	!POP 4
	stx But
	sty But+2
	phy
	phx
	pei (ButArea+2)
	pei (ButArea)
	jsr @_JCntAdd
	!POP 8
	pea 0
	pei (upto)
	pei (But+2)
	pei (But)
	jsr @_JWSetData
	!POP 8
	ldy #JBut_Clicked
	lda #!JDlgBClick
	sta [But],y
	lda #^JDlgBClick
	iny
	iny
	sta [But],y
	inc upto
	bra nxone
nomore	!POST LZ
	rtl
	
	.)

JDlgBClick
	.(
	.abs 1
LZ	= *-1
	.dsb 5
Self	.long 4

	.text
	!PRO LZ
	pei (Self+2)
	pei (Self)
	jsr @_JWGetData
	!POP 4
	phy
	phx
	!POUT "Weeeeeeeee!\n"
	!POP 4
	!POST LZ
	rtl
	
	.)
	
&_JDlgAddContent
	.(
	.abs 1
CntArea	.long 4
LZ	= *-1
	.dsb 5
Self	.long 4
Content	.long 4

	.text
	!PRO LZ
	ldy #JDlg_Top
	lda [Self],y
	sta CntArea
	iny
	iny
	lda [Self],y
	sta CntArea+2
	
	pei (Content+2)
	pei (Content)
	pei (CntArea+2)
	pei (CntArea)
	jsr @_JCntAdd
	!POST LZ+8
	rtl
	.)
	
&_JDlgExec
	.(
	.abs 1
LZ	= *-1
	.dsb 5
Self	.long 4

	.text
	!PRO LZ
	ldy #JDlg_Done
	lda #0
	sta [Self],y
	pei (Self+2)
	pei (Self)
	jsr @_JWModal
	ldx #MJW_Show
	jsr @VMC
	!POP 4
notdone	jsr @_JEvent
	ldy #JDlg_Done
	lda [Self],y
	beq notdone
	pei (Self+2)
	pei (Self)
	jsr @_JWUnModal
	ldx #MJW_Hide
	jsr @VMC
	!POP 4
	ldy #JDlg_Done
	lda [Self],y
	tax
	!POST LZ
	rtl
	
	.)
		
&_JDlgNotice 
	.(

	.abs 1
LZ	= *-1
	.dsb 5

Self	.long 4
SubType	.word 2
Sender	.word 2
DataP	.long 4
	.text

	!PRO LZ
	lda SubType
	cmp #EVS_User
	bne nothing
	lda [DataP]
	cmp #CMD_CLOSE
	bne nothing
	ldy #JDlg_Done
	lda #-1
	sta [Self],y
	bra itsdead
nothing	pei (DataP+2)
	pei (DataP)
	pei (Sender)
	pei (SubType)
	pei (Self+2)
	pei (Self)
	jsr @_JWNotice
	!POP 12
itsdead	!POST LZ
	rtl
	
	.)
	
&_JDlgShow
	.(
	.abs 1
Hints	.dsb SH_SIZE
LZ	= *-1
	.dsb 5
Self	.long 4
	.text
	!PRO LZ
	pea 0
	tdc
	clc
	adc #Hints
	pha
	pei (Self+2)
	pei (Self)
	ldx #MJW_GetHints
	jsr @VMC
	!POP 8
	pei (Hints+SH_PrefY)
	pei (Hints+SH_PrefX)
	pea 0
	pea 0
	pei (Self+2)
	pei (Self)
	jsr @_JWSetBounds
	jsr @_JCntShow
	!POST LZ+12
	rtl		
	
	.)
	
	!PRPCLASS JDlg
	
JDlgMethods .(
	jmp (Methods,x)
Methods	.long _JCntInit	; Init
	.long _JCntKill	; Destory
	.long _JWndDraw	; Draw
	.long _JDlgShow	; Show
	.long _JCntHide	; Hide
	.long _JCntHandle	; Handle
	.long _JCntNotify	; Notify
	.long _JCntGetHints ; Notify

	.long _JCntKeyD	; A key down
	.long _JWButton	; Button 
	.long _JWndRButton ; Right button (menu)
	.long _JWMotion ; Motion
	.long _JWBound	; Boundary
	.long _JDlgNotice	; Notice

	.long _JCntAdd	; Add
	.long _JCntRemove ; Remove
	.long _JCntLayout
	.)

	.)

