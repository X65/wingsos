	.(

/* 
JBarInit(JWin *Self, int Flags);
JBarSteps(JWin *Self, int butstep, int pagestep);
JBarSetParams(JWin *Self, long max, int extent);
JBarNotify(JWin *Self, int type);
private JBarSetSz(JWin *Self);
JBarSetVal(JWin *Self, long val);
JBarWhich(JWin *Self, 


Max is used atm, where Max-extent should be used
(JBarSetVal, JBarButton)
*/


	.al
	.xl
	.pic
	
	.include	<kern.i65>
	.include	<win.i65>
	.include	<stdio.i65>
	.include	<widget.i65>
	.include	<lcc.i65>


/*-----------------------------------------------
           Scroll bar - Jwin
------------------------------------------------*/

&_JBarInit	.(

	.abs 1
LZ	= *-1
	.dsb 5
Self	.long 4
Flags	.word 2

	.text
	!PRO LZ
	!PRPOBJ JBar
	pea JF_Selectable|JF_Front
	pea WEV_Button|WEV_Boundary|WEV_MotionBut
	pea 8
	pea 8
	pei (Self+2)
	pei (Self)
	jsr @_JWInit
	!POP 12	
	ldy #JBar_Flags
	lda Flags
	sta [Self],y
	beq isvert
	lda #32767
	ldy #JW_MaxXS
	sta [Self],y
	lda #80
	ldy #JW_PrefXS
	sta [Self],y
	bra gotpf
isvert	lda #32767
	ldy #JW_MaxYS
	sta [Self],y
	lda #80
	ldy #JW_PrefYS
	sta [Self],y

gotpf	lda #$0f
	ldy #JW_Colours
	sta [Self],y
	lda #1
	ldy #JBar_ButStep
	sta [Self],y
	lda #10
	ldy #JBar_PageStep
	sta [Self],y
exeet	ldx Self
	ldy Self+2
	!POST LZ
	rtl
	.)

&_JBarSteps	
	.(
	.abs 1
LZ	= *-1
	.dsb 5

Self	.long 4
ButStep	.word 2
PageStep .word 2

	.text
	!PRO LZ
	lda ButStep
	ldy #JBar_ButStep
	sta [Self],y
	lda PageStep
	ldy #JBar_PageStep
	sta [Self],y
exeet	!POST LZ
	rtl

	.)
	
&_JBarSetParams
	.(
	.abs 1
AtEnd	.word 2
Vis	.word 2
LZ	= *-1
	.dsb 5

Self	.long 4
Max	.long 4
Extent	.word 2

	.text
	!PRO LZ
	stz AtEnd
	stz Vis
	inc Vis
	ldy #JBar_Flags
	lda [Self],y
	and #SBAR_GoEnd
	!jeq nmax
	ldy #JBar_Value
	lda [Self],y
	clc
	ldy #JBar_Extent
	adc [Self],y
	tax
	ldy #JBar_Value+2
	lda [Self],y
	adc #0
	ldy #JBar_Max+2
	cmp [Self],y
	bne nmax
	dey
	dey
	txa
	cmp [Self],y
	bne nmax
	inc AtEnd
	
nmax	lda Max
	ldy #JBar_Max
	sta [Self],y
	iny
	iny
	lda Max+2
	sta [Self],y
	bne nbext
	lda Max
	cmp Extent
	beq nvis
	bcs nbext
nvis	dec Vis
	sta Extent
	
nbext	lda Extent
	ldy #JBar_Extent
	sta [Self],y
	lda AtEnd
	bne putend
	ldy #JBar_Value
	lda [Self],y
	clc
	adc Extent
	tax
	iny
	iny
	lda [Self],y
	adc #0
	cmp Max+2
	bcc smaller
	bne putend
	cpx Max
	bcc smaller
putend	ldy #JBar_Freeze
	lda #1
	sta [Self],y
	lda Max
	sec
	sbc Extent
	tax
	lda Max+2
	sbc #0
	pha
	phx
	pei (Self+2)
	pei (Self)
	jsr @_JBarSetVal
	!POP 8
	ldy #JBar_Freeze
	lda #0
	sta [Self],y
	
smaller	pei (Self+2)
	pei (Self)
	jsr @_JBarSetSz
	pla
	pla
exeet	ldx Vis
	!POST LZ
	rtl

	.)
	
&_JBarNotify .(
	.abs 1
LZ	= *-1
	.dsb 5
Self	.long 4
Type	.word 2
	
	.text
	!PRO LZ
	lda Type
	cmp #JNF_Resized
	!jne nrsz
	ldy #JBar_Flags
	lda [Self],y
	and #SBAR_Horiz
	beq vert
	ldy #JW_XSize
	lda [Self],y
	bra ishor
vert	ldy #JW_YSize
	lda [Self],y
ishor	ldy #JBar_CSize
	sta [Self],y	
	pei (Self+2)
	pei (Self)
	jsr @_JBarSetSz
	pla
	pla
nrsz	pei (Type)
	pei (Self+2)
	pei (Self)
	jsr @_JWNotify
	!POP 6
exeet	!POST LZ
	rtl

	.)
	
_JBarSetSz	.(

	.abs 1
mreg	.long 4
mreg2	.long 4
SizeOf	.word 2
Len	.word 2
LZ	= *-1
	.dsb 5

Self	.long 4
	.text
	
	!PRO LZ
	ldy #JBar_Freeze
	lda [Self],y
	!jne exeet
	
	ldy #JBar_CSize
	lda [Self],y
	sec
	sbc #16
	sta Len
	sta SizeOf
	
	ldy #JBar_Max
	lda [Self],y
	iny
	iny
	ora [Self],y
	beq div0

	ldy #JBar_Extent
	lda [Self],y
	sta mreg2+2
	stz mreg2
	ldy #JBar_Max
	lda [Self],y
	tax
	iny
	iny
	lda [Self],y
	jsr @__divu32
	stx mreg2
	stz mreg2+2
	lda #0
	ldx SizeOf
	jsr @__muli32
	and #$fff8
	cmp #8
	bcs fine
	lda #8
fine	sta SizeOf

isfull	lda Len
	sec
	sbc SizeOf
	sta mreg2
	stz mreg2+2
	ldy #JBar_Value
	lda [Self],y
	tax
	iny
	iny
	lda [Self],y
	jsr @__muli32
	sta mreg2+2
	stx mreg2
	
	ldy #JBar_Max
	lda [Self],y
	sec
	ldy #JBar_Extent
	sbc [Self],y
	tax
	ldy #JBar_Max+2
	lda [Self],y
	sbc #0
	jsr @__divu32
	txa
div0	lsr
	lsr
	lsr
	ldy #JBar_Offs
	sta [Self],y
nobby	lda SizeOf
	lsr
	lsr
	lsr
	ldy #JBar_BarSize
	sta [Self],y
	pei (Self+2)
	pei (Self)
	jsr @_JWReDraw
	pla
	pla
exeet	!POST LZ
	rtl

	.)
		
&_JBarSetVal .(

	.abs 1
MaxMExt	.long 4
LZ	= *-1
	.dsb 5

Self	.long 4
Val	.long 4

	.text
	!PRO LZ
	ldy #JBar_Max
	lda [Self],y
	sec
	ldy #JBar_Extent
	sbc [Self],y
	sta MaxMExt
	ldy #JBar_Max+2
	lda [Self],y
	sbc #0
	sta MaxMExt+2
	lda Val+2
	bpl ispl
	stz Val
	stz Val+2
	bra blnk
ispl	lda Val+2
	cmp MaxMExt+2
	bcc blnk
	bne usemax
	lda Val
	cmp MaxMExt
	bcc blnk
usemax	lda MaxMExt
	sta Val
	lda MaxMExt+2
	sta Val+2
blnk	lda Val
	ldy #JBar_Value
	cmp [Self],y
	bne difval
	lda Val+2
	iny
	iny
	cmp [Self],y
	beq sameval
	lda Val
	dey
	dey
difval	sta [Self],y
	lda Val+2
	iny
	iny
	sta [Self],y
	pei (Self+2)
	pei (Self)
	jsr @_JBarSetSz
	pla
	pla
	pei (Val+2)
	pei (Val)
	pei (Self+2)
	pei (Self)
	ldy #JBar_Changed
	lda [Self],y
	tax
	iny
	iny
	lda [Self],y
	jsr @cb
	!POP 8
sameval	!POST LZ
	rtl

	.)

; 1 - button up
; 2 - button down
; 3 - pageup
; 4 - pagedown
; 5 - middle

&_JBarWhich	.(

	.abs 1
BSize	.word 2
BOffs	.word 2
LZ	= *-1
	.dsb 5

Self	.long 4
C	.word 2

	.text
	!PRO LZ
	ldy #JBar_Offs
	lda [Self],y
	asl
	asl
	asl
	sta BOffs
	ldy #JBar_BarSize
	lda [Self],y
	asl
	asl
	asl
	sta BSize
	lda C
	cmp #8
	bcs nobut1
	ldx #1
	bra gotsec
nobut1	ldy #JBar_CSize
	lda [Self],y
	sec
	sbc #8
	cmp C
	bcs nobut2
	ldx #2
	bra gotsec
nobut2	lda C
	sec
	sbc #8
	sec
	sbc BOffs
	bcs nopup
	ldx #3
	bra gotsec
nopup	sbc BSize
	bcs nomid
	ldx #5
	bra gotsec
nomid	ldx #4
gotsec	!POST LZ
	rtl

	.)
	
&_JBarMotion .(

	.abs 1
mreg	.long 4
mreg2	.long 4
LZ	= *-1
	.dsb 5

Self	.long 4
Type	.word 2
X	.word 2
Y	.word 2
XAbs	.word 2
YAbs	.word 2

	.text
	!PRO LZ
	ldy #JBar_Dragging
	lda [Self],y
	!jeq exeet
	ldy #JBar_Flags
	lda [Self],y
	and #SBAR_Horiz
	bne horiz 
	lda Y
	bra vert
horiz	lda X
vert	sec
	ldy #JBar_DragStart
	sbc [Self],y
	sta mreg2
	stz mreg2+2
	bpl ispl
	dec mreg2+2
ispl	ldy #JBar_DragRatio
	lda [Self],y
	tax
	iny
	iny
	lda [Self],y
/*	pha
	phx
	pei (mreg2+2)
	pei (mreg2)
	!POUT "%lx x %lx\n"
	pla
	pla
	plx
	pla */
	jsr @__muli32
	
/*	pha
	phx ; note: goes with debug below*/
	
	stz mreg+2
	tax
	bpl ispl2
	dec mreg+2
ispl2	clc
	ldy #JBar_DragVal
	adc [Self],y
	tax
	iny
	iny
	lda [Self],y
	adc mreg+2
	pha
	phx
	pei (Self+2)
	pei (Self)
	jsr @_JBarSetVal
	!POP 8
	
/*	pei (Type)
	pei (Y)
	pei (X)
	!POUT "X %d, Y %d, %x, %lx\n"
	!POP 10 */
exeet	!POST LZ
	rtl
	.)
	
&_JBarButton .(

	.abs 1
Step	.word 2
Orient	.word 2
MaxMExt	= *
mreg2	.long 4
LZ	= *-1
	.dsb 5

Self	.long 4
Type	.word 2
X	.word 2
Y	.word 2
XAbs	.word 2
YAbs	.word 2

	.text
	!PRO LZ
	lda Type
	and #EVS_But1Down
	!jne isdown
	ldy #JBar_Dragging
	lda #0
	sta [Self],y
	!jra nothing
isdown	ldy #JBar_Max
	lda [Self],y
	sec
	ldy #JBar_Extent
	sbc [Self],y
	sta mreg2+2
;	ldy #JBar_Max+2
;	lda [Self],y
;	sbc #0
;	sta MaxMExt+2
	stz mreg2
	ldy #JBar_Flags
	lda [Self],y
	and #SBAR_Horiz
	sta Orient
	beq vert
	pei (X)
	bra ishor
vert	pei (Y)
ishor	pei (Self+2)
	pei (Self)
	jsr @_JBarWhich
	pla
	pla
	pla
	cpx #5
	!jne ndragmid
	lda Orient
	bne horiz
	lda Y
	bra isvert
horiz	lda X
isvert	ldy #JBar_DragStart
	sta [Self],y
	ldy #JBar_Value
	lda [Self],y
	ldy #JBar_DragVal
	sta [Self],y
	ldy #JBar_Value+2
	lda [Self],y
	ldy #JBar_DragVal+2
	sta [Self],y
	
	ldy #JBar_BarSize
	lda [Self],y
	asl
	asl
	asl
	pha
	ldy #JBar_CSize
	lda [Self],y
	sec
	sbc #16
	sec
	sbc 1,s
	ply
	tax
	lda #0
;	phx
	jsr @__divu32
	ldy #JBar_DragRatio+2
	sta [Self],y
;	pha
;	phx
	dey
	dey
	txa
	sta [Self],y
	
/*	ldy #JBar_Max+2
	lda [Self],y
	pha
	dey
	dey
	lda [Self],y
	pha
	!POUT "Max %ld, DragRatio %lx, Pixels %d\n"
	!POP 10 */
	pei (Self+2)
	pei (Self)
	jsr @_JWMouFoc
	!POP 4
	ldy #JBar_Dragging
	lda #1
	sta [Self],y
	!jra nothing
ndragmid
	cpx #3
	bcc butstep
	ldy #JBar_PageStep
	lda [Self],y
	sta Step
	bra nowdoit
butstep	ldy #JBar_ButStep
	lda [Self],y
	sta Step
nowdoit	txa
	and #1
	beq notopbut
	ldy #JBar_Value
	lda [Self],y
	sec
	sbc Step
	tax
	iny
	iny
	lda [Self],y
	sbc #0
	bcs dochange
	ldx #0
	txa
	bra dochange
noth2	!jra nothing
notopbut	
	ldy #JBar_Value
	lda [Self],y
	clc
	adc Step
	tax
	iny
	iny
	lda [Self],y
	adc #0
	ldy #JBar_Max+2
	cmp [Self],y
	bcc dochange
	bne pastmax
	pha
	txa
	dey
	dey
	cmp [Self],y
	pla
	bcc dochange
pastmax	ldy #JBar_Max
	lda [Self],y
	tax
	iny
	iny
	lda [Self],y
dochange	
	pha
	phx
	pei (Self+2)
	pei (Self)
	jsr @_JBarSetVal
	!POP 8
	
nothing	!POST LZ
	rtl

	.)
	
&_JBarDraw	.(

	.abs 1
X8	.word 2
Y8	.word 2
LZ	= *-1
	.dsb 5

Self	.long 4
	.text
	
	!PRO LZ	
	pea $f0
	jsr @_GfxSetCol
	pla
	
	pea 0
	pea 0
	jsr @_GfxSetPen
	pla
	pla
	
	ldy #JW_YSize
	lda [Self],y
	lsr
	lsr
	lsr
	pha
	sta Y8
	ldy #JW_XSize
	lda [Self],y
	lsr
	lsr
	lsr
	pha
	sta X8
	ldy #JBar_Flags
	lda [Self],y
	and #SBAR_Horiz
	beq isvert
	pea ^JBarChar2
	pea !JBarChar2
	bra gch	
isvert	pea ^JBarChars
	pea !JBarChars
gch	pea ^BarStr
	pea !BarStr
	jsr @_GfxString
	tsc
	clc
	adc #12
	tcs
	
	pea 0
	jsr @_GfxChar
	pla
	
	pea CHAR_Col
	jsr @_GfxChar
	pla
	pea $bf
	jsr @_GfxChar
	pla
	
	ldy #JBar_Offs
	lda [Self],y
	beq notopbit
	pha
	pea ^BarStr2
	pea !BarStr2
	jsr @_GfxString
	pla
	pla
	pla

notopbit
	ldy #JBar_BarSize
	lda [Self],y
	cmp #2
	bcs morethan1
	pea 3
	jsr @_GfxChar
	pla
	bra nowbot

morethan1	pea 4
	jsr @_GfxChar
	pla
	
	ldy #JBar_BarSize
	lda [Self],y
	dec
	dec
	beq nomidbit
	pha
	pea ^BarStr3
	pea !BarStr3
	jsr @_GfxString
	pla
	pla
	pla
	
nomidbit	pea 5
	jsr @_GfxChar
	pla	
	
nowbot	ldy #JBar_CSize
	lda [Self],y
	lsr
	lsr
	lsr
	dec
	dec
	ldy #JBar_BarSize
	sec
	sbc [Self],y
	beq nobotbit
	bcc nobotbit
	ldy #JBar_Offs
	sec
	sbc [Self],y
	beq nobotbit
	bcc nobotbit
	pha
	pea ^BarStr2
	pea !BarStr2
	jsr @_GfxString
	pla
	pla
	pla
	
nobotbit 
	pea CHAR_Col
	jsr @_GfxChar
	pla
	pea $f0
	jsr @_GfxChar
	pla
	
	pea 1
	jsr @_GfxChar
	pla
	
	pea CHAR_End
	jsr @_GfxChar
	pla

exeet	!POST LZ
	rtl

BarStr	.byte GFX_Charset,"%D"
	.byte "%b%b"
	.byte "%E"

BarStr2	.byte CHAR_Rep,"%b",6
	.byte "%E"	
BarStr3	.byte CHAR_Rep,"%b",2
	.byte "%E"	
	.)

JBarChars	
	.byte $00,$18,$18,$3c,$3c,$7e,$7e,$00
	.byte $00,$7e,$7e,$3c,$3c,$18,$18,$00
	
	.byte $ef,$99,$bb,$e7,$ef,$99,$bb,$e7 ; both open
	.byte $ff,$99,$bb,$e7,$ef,$99,$bb,$ff ; both closed
	.byte $ff,$99,$bb,$e7,$ef,$99,$bb,$e7 ; top close
	.byte $ef,$99,$bb,$e7,$ef,$99,$bb,$ff ; bottom closed
	
	.byte $81,$81,$81,$81,$81,$81,$81,$81
	
JBarChar2	
	.byte $00,$06,$1e,$7e,$7e,$1e,$06,$00
	.byte $00,$60,$78,$7e,$7e,$78,$60,$00
	
	.byte $ff,$99,$bb,$66,$ee,$99,$bb,$ff
	.byte $ff,$99,$bb,$e7,$ef,$99,$bb,$ff
	.byte $ff,$99,$bb,$e6,$ee,$99,$bb,$ff
	.byte $ff,$99,$bb,$67,$ef,$99,$bb,$ff
	
	.byte $ff,$00,$00,$00,$00,$00,$00,$ff

        !PRPCLASS JBar
	
JBarMethods .(
	jmp (Methods,x)
Methods	.long _JWInit	; Init
	.long _JWKill	; Destory
	.long _JBarDraw	; Draw
	.long _JWShow	; Show
	.long _JWHide	; Hide
	.long _JWHandle	; Handle
	.long _JBarNotify ; Notify
	.long _JWGetHints ; Notify

	.long _JWKeyD	; A key down
	.long _JBarButton ; Button 
	.long _JWRButton ; Right button (menu)
	.long _JBarMotion	; Motion
	.long _JWBound ; Boundary
	.long _JWNotice	; Notice
	
	.)

	.)
	
