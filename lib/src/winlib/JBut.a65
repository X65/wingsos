	.(

	.al
	.xl
	.pic
	
	.include	<kern.i65>
	.include	<win.i65>	
	.include	<stdio.i65>
	.include	<widget.i65>
	.include	<lcc.i65>


/*-----------------------------------------------
     Button Widget Methods - Inherits JWin
------------------------------------------------*/

&_JButInit	.(
	.abs 1
SSize	.word 2
LZ	= *-1
	.dsb 5

Self	.long 4
Label	.long 4
	.text
	
	!PRO LZ
	!PRPOBJ JBut
	pea 0
	pea 0
	pei (Label+2)
	pei (Label)
	jsr @_FL_extStrX
	!POP 8
	stx SSize
	txa
	clc
	adc #4
	pha
	eor #7
	inc
	and #7
	clc
	adc 1,s
	sta 1,s
	plx
	lda #JF_Selectable
	pha
	pea WEV_Button+WEV_Boundary
	pea 16
	phx
	pei (Self+2)
	pei (Self)
	jsr @_JWInit
	!POP 12
	
	ldy #JW_XSize
	lda [Self],y
	sec
	sbc SSize
	lsr
	ldy #JBut_TextX
	sta [Self],y
	ldy #JBut_TextY
	lda #12
	sta [Self],y
	lda @DflPen
	ora #$0f
	ldy #JW_Colours
	sta [Self],y
	lda @DflPen
	ora #$0e
	ldy #JBut_EntCol
	sta [Self],y
	ldy #JW_Font
	lda #0
	sta [Self],y
	
	lda Label
	ldy #JBut_Label
	sta [Self],y
	iny
	iny
	lda Label+2
	sta [Self],y
exeet	ldx Self
	ldy Self+2
	!POST LZ
	rtl
	.)

&_JButDraw	.(
	.abs 1
LZ	= *-1
	.dsb 5
Self	.long 4

	.text

	!PRO LZ	
	pea 0
	pea 0
	jsr @_GfxSetPen
	pla
	pla
	
/*	ldy #JW_YSize
	lda [Self],y
	pha
	ldy #JW_XSize
	lda [Self],y
	pha
	ldy #JW_Y
	lda [Self],y
	pha
	ldy #JW_X
	lda [Self],y
	pha
	!POUT "Bounds %d,%d,%d,%d\n"
	!POP 8 */
	
	ldy #JW_XSize
	lda [Self],y
	lsr
	lsr
	lsr
	dec
	dec
	pha
	pha
	ldy #JBut_Flags
	lda [Self],y
	and #JBF_Entered
	bne enter
	ldy #JW_Colours
	lda [Self],y
	bra gotc
enter	ldy #JBut_EntCol
	lda [Self],y
gotc	pha
	ldy #JW_YSize
	lda [Self],y
	lsr
	lsr
	lsr
	pha
	lda 5,s
	inc
	inc
	pha
	pea ^Chars
	pea !Chars
	pea ^ButStr
	pea !ButStr
	jsr @_GfxString
	!POP 18
	
	ldy #JBut_TextY
	lda [Self],y
	pha
	ldy #JBut_TextX
	lda [Self],y
	pha
	ldy #JBut_Flags
	lda [Self],y
	and #JBF_Butdown+JBF_Entered
	cmp #JBF_Butdown+JBF_Entered
	bne nodown
	lda 1,s
	inc
	sta 1,s
	lda 3,s
	inc
	sta 3,s
nodown	jsr @_GfxSetPen
	pla
	pla
	
	ldy #JW_Font
	lda [Self],y
	pha
	jsr @_GfxSetFont
	pla
	
	pea GMOD_Ora
	jsr @_GfxSetMode
	pla
	
	ldy #JBut_Label+2
	lda [Self],y
	pha
	dey
	dey
	lda [Self],y
	pha
	jsr @_GfxText
	!POP 4
	
	!POST LZ
	rtl
	
	
ButStr	.byte GFX_Charset,"%D%b%b"
	.byte CHAR_Col,"%b"
	.byte 1,CHAR_Rep,"%b",2,3
	.byte 6,CHAR_Rep,"%b",7,8
	.byte CHAR_End
	.byte "%E"
		
	.)

&_JButButton
	.(
	.abs 1
LZ	= *-1
	.dsb 5
Self	.long 4
Type	.word 2

	.text
	!PRO LZ
	ldx #JBF_Butdown
	lda Type
	cmp #EVS_But1Down
	bne butup
	jsr setbutfl
	bra doredraw
	
butup	jsr clrbutfl
	pei (Self+2)
	pei (Self)
	ldy #JBut_Clicked
	lda [Self],y
	tax
	iny
	iny
	lda [Self],y
	jsr @cb
	pla
	pla
	bra doredraw
	

&&_JButBound
	!PRO LZ
	ldx #JBF_Entered
	lda Type
	cmp #EVS_Entered
	bne left
	jsr setbutfl
	bra doredraw
left	jsr clrbutfl
doredraw	
	pei (Self+2)
	pei (Self)
	jsr @_JWReDraw
	pla
	pla
exeet	!POST LZ
	rtl
	
	
clrbutfl	.(
	txa
	eor #-1
	ldy #JBut_Flags
	and [Self],y
	sta [Self],y
	rts
	.)
	
setbutfl	.(
	txa
	ldy #JBut_Flags
	ora [Self],y
	sta [Self],y
	rts
	.)
	
	
	.)

       !PRPCLASS JBut
       
JButMethods .(
	jmp (Methods,x)
Methods	.long _JWInit	; Init
	.long _JWKill	; Destory
	.long _JButDraw	; Draw
	.long _JWShow	; Show
	.long _JWHide	; Hide
	.long _JWHandle	; Handle
	.long _JWNotify	; Notify
	.long _JWGetHints ; Notify

	.long _JWKeyD	; A key down
	.long _JButButton ; Button 
	.long _JWRButton ; Right button (menu)
	.long _JWMotion	; Motion
	.long _JButBound ; Boundary
	.long _JWNotice	; Notice
	
	.)

	.)
