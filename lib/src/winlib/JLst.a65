	.(

	.al
	.xl
	.pic
	
	.include	<kern.i65>
	.include	<win.i65>	
	.include	<stdio.i65>
	.include	<widget.i65>


/*-----------------------------------------------
           List Widget - Jwin
------------------------------------------------*/

&_JLstInit	.(

LZ	= 0

Self	= LZ + 6
Parent	= LZ + 10
Flags	= LZ + 14

	phd
	tsc
	sec
	sbc #LZ
	tcs
	tcd
	!PRPOBJ JLst_SIZE, JLstMethods, MJLst_SIZE
	bcs exeet
	pei (Flags)
	pea WEV_Button+WEV_Boundary
	pei (Parent+2)
	pei (Parent)
	pea 32	; YSize
	pea 32	; XSize
	pea 0	; Y
	pea 0	; X
	pei (Self+2)
	pei (Self)
	jsr @_JWinInit
	tsc
	clc
	adc #20
	tcs
	
exeet	ldx Self
	ldy Self+2
	tsc
	clc
	adc #LZ
	tcs
	pld
	rtl

	.)

&_JLstDraw	.(

YUp	= 1
Upto	= 3
LZ	= 6

Self	= LZ + 6
	

	phd
	tsc
	sec
	sbc #LZ
	tcs
	tcd

	ldy #JW_Colours
	lda [Self],y
	pha
	jsr @_GfxSetCol
	pla
	
	pea 0
	jsr @_GfxSetFont
	pla

	pea 0
	pea 0
	jsr @_GfxSetPen
	pla
	pla
	
	ldy #JW_XSize
	lda [Self],y
	lsr
	lsr
	lsr
	pha
	ldy #JW_YSize
	lda [Self],y
	lsr
	lsr
	lsr
	pha
	lda 1,s
	pha
	lda 5,s
	pha 
	pea ^TxtStr
	pea !TxtStr
	jsr @_GfxString
	tsc
	clc
	adc #12
	tcs
	
	pea GMOD_Ora
	jsr @_GfxSetMode
	pla

	ldy #JLst_Top
	lda [Self],y
	sta Upto
	ldy #JLst_Top+2
	lda [Self],y
	sta Upto+2
	ora Upto
	bne istext
	brl doneStr
istext	lda #7
	sta YUp	
nextline	pei (YUp)
	pea 0
	jsr @_GfxSetPen
	pla
	pla
	
	ldy #Item_String+2
	lda [Upto],y
	pha
	ldy #Item_String
	lda [Upto],y
	pha
	pea ^TxtStr2
	pea !TxtStr2
	jsr @_GfxString
	pla
	pla
	pla
	pla
		
	lda YUp
	clc
	adc #8
	sta YUp
	lda YUp
	ldy #JW_YSize
	cmp [Self],y
	bcs doneStr
	ldy #Item_Next
	lda [Upto],y
	tax
	ldy #Item_Next+2
	lda [Upto],y
	sta Upto+2
	stx Upto
	ldy #JLst_Top
	lda [Self],y
	cmp Upto
	bne nextline
	ldy #JLst_Top+2
	lda [Self],y
	cmp Upto+2
	bne nextline
	
doneStr	tsc
	clc
	adc #LZ
	tcs
	pld
	rtl
	
TxtStr	.byte GFX_Charset
	.word !blank
	.byte ^blank,0
	.byte "%b%b"
	.byte CHAR_YRep,"%b",CHAR_Rep,"%b",0,CHAR_YEnd
	.byte CHAR_End
	.byte "%E"
	
TxtStr2	.byte GFX_Text,"%s"
	.byte "%E"
	
blank	.dsb 8	

	.)

/* Insert/append an entry to the List Widget */

&_JLstInsert .(

ItemP	= 1
LZ	= 4

Self	= LZ + 6
StrP	= LZ + 10
InsP	= LZ + 14
DataP	= LZ + 18
	

	phd
	tsc
	sec
	sbc #LZ
	tcs
	tcd

	lda InsP
	ora InsP+2
	bne okpie
	ldy #JLst_Top
	lda [Self],y
	sta InsP
	ldy #JLst_Top+2
	lda [Self],y
	sta InsP+2
	
okpie	pea 0
	pea Item_SIZE
	jsr @_xmalloc
	pla
	pla
	stx ItemP
	sty ItemP+2
	
	phy
	phx
	pei (StrP+2)
	pei (StrP)
	jsr @_strdup
	pla
	pla
	tya
	ldy #Item_String+2
	sta [ItemP],y
	txa
	ldy #Item_String
	sta [ItemP],y
	
	lda DataP
	ldy #Item_Data
	sta [ItemP],y
	lda DataP+2
	ldy #Item_Data+2
	sta [ItemP],y

	pei (InsP+2)
	pei (InsP)
	ldy #JLst_Top+2
	lda [Self],y
	pha
	ldy #JLst_Top
	lda [Self],y
	pha
	jsr @_addQueue
	tsc
	clc
	adc #12
	tcs
	tya
	ldy #JLst_Top+2
	sta [Self],y
	txa
	ldy #JLst_Top
	sta [Self],y
exeet	pei (Self+2)
	pei (Self)
	jsr @_JWinReDraw
	pla
	pla
	tsc
	clc
	adc #LZ
	tcs
	pld
	rtl

	.)
	
JLstMethods .(
	jmp (Methods,x)
Methods	.word _JLstInit
	.word _JWinKill
	.word _JLstDraw
	.word _JWinShow
	.word _JWinHandle
	.word _JWinReDraw
	.word _JWinFocus
	.word _JWinSelect
	.word _JWinKeyD
	.word _JWinAdd
	.word _JWinButton
	.word _JWinMotion
	.word _JWinBound
	.word _JWinNotice
	.word _JWinGeom
	.word _JWinResize
	.word _JWinRButton
	.word _JWinChNotice
	.)

	.)
	
