
	.(

	.al
	.xl
	.pic
	
	.include	<kern.i65>
	.include	<win.i65>	
	.include	<stdio.i65>
	.include	<widget.i65>
	.include	<dirent.i65>
	.include	<65816.i65>
	.include	<lcc.i65>

/*-----------------------------------------------
     Tree Column View widget
------------------------------------------------*/

&_JTreeColInit	
	.(

	.abs 1
LZ	= *-1
	.dsb 5
Self	.long 4
Tree	.long 4
Title	.long 4
Width	.word 2
Offset	.long 4
Type	.word 2

	.text
	
	!PRO LZ
	!PRPOBJ JTreeCol
	pea JF_Selectable
	pea WEV_Button+WEV_Boundary
	pea 80
	pea 80
	pei (Self+2)
	pei (Self)
	jsr @_JWInit
	!POP 12
	pei (Title+2)
	pei (Title)
	!POUT "Title of col '%s'\n"
	!POP 4
	lda #32767
	ldy #JW_MaxYS
	sta [Self],y
	ldy #JTreeCol_Offset
	lda Offset
	sta [Self],y
	iny
	iny
	lda Offset+2
	sta [Self],y
	ldy #JTreeCol_Tree
	lda Tree
	sta [Self],y
	iny
	iny
	lda Tree+2
	sta [Self],y
		
	ldy #JTreeCol_Type
	lda Type
	sta [Self],y
	ldy #JW_Colours
	lda [Tree],y
	sta [Self],y
exeet	ldx Self
	ldy Self+2
	!POST LZ
	rtl
	.)

&_JTreeColButton
	.(

	.abs 1
ItemP	.long 4
TreP	.long 4
Indent	.word 2
LZ	= *-1
	.dsb 5
Self	.long 4
Type	.word 2
X	.word 2
Y	.word 2

	.text
	!PRO LZ
	
	lda Type
	and #EVS_But1Down
	!jne exeet
	ldy #JTreeCol_Tree
	lda [Self],y
	sta TreP
	iny
	iny
	lda [Self],y
	sta TreP+2
	
	pea 0
	tdc
	clc
	adc #Indent
	pha
	pei (Y)
	pei (Self+2)
	pei (Self)
	jsr @_JTreeColRow
	!POP 10
	stx ItemP
	sty ItemP+2
	phy
	phx
	!POUT "Found row %lx\n"
	!POP 4
	
	lda ItemP
	ora ItemP+2
	!jeq exeet
	
	ldy #JTreeCol_Type
	lda [Self],y
	and #JColF_Indent
	beq noexp
	ldy #VNode_Flags
	lda [ItemP],y
	and #JItemF_Expandable
	beq noexp
	lda Indent
	asl
	asl
	asl
	sec
	sbc X
	cmp #-8
	bcc noexp
	
	pei (ItemP+2)
	pei (ItemP)
	pei (TreP+2)
	pei (TreP)
	jsr @_JTreeTogExpand
	!POP 8
	bra exeet

/*	
	pea 0
	tdc
	inc
	pha
	pei (TreP+2)
	pei (TreP)
	jsr @_JTreeGetIter
	!POP 8
	
	lda Y
	clc
	ldy #JList_YScroll
	adc [TreP],y
	sta Y
	
nxone	pea 0
	tdc
	inc
	pha
	pei (TreP+2)
	pei (TreP)
	jsr @_JTreeNextItem
	!POP 8	
	txa
	!jne exeet
	
	lda Y
	sec
	sbc #8
	sta Y
	!jpl nxone
	
	ldy #JCol_Type
	lda [Self],y
	and #JColF_Indent
	beq noexp
	lda Iter+TreeIter_Flags
	and #JITEMF_Expandable
	beq noexp
	lda Iter+TreeIter_Indent
	asl
	asl
	asl
	sec
	sbc X
	cmp #-8
	bcc noexp
	
	pei (Iter+TreeIter_ItemP+2)
	pei (Iter+TreeIter_ItemP)
	pei (TreP+2)
	pei (TreP)
	jsr @_JTreeTogExpand
	!POP 8
	bra exeet
*/	
noexp	pei (ItemP+2)
	pei (ItemP)
	pei (TreP+2)
	pei (TreP)
	jsr @_JTreeItemClicked
	!POP 8
	
exeet	!POST LZ
	rtl
	
	.)

/*		
IcoStr	.byte GFX_Bitmap,"%D"
	.byte 2,1
	.byte BITT_Seper,"%D"
	.byte "%E"
	
ChString
	.byte GFX_Charset
	.byte "%D"
	.byte 1,1
	.byte "%b"
	.byte CHAR_End
	.byte "%E"
	
ChSet	.dsb 8
	.byte 0,0,$7c,$6c,$47,$6c,$7c,0
	.byte 0,0,$7c,$7c,$47,$7c,$7c,0
*/

	!PRPCLASS JTreeCol
			
JTreeColMethods	.(
	jmp (Methods,x)
Methods	.long _JWInit	; Init
	.long _JWKill	; Destory
	.long _JTreeColDraw	; Draw
	.long _JWShow	; Show
	.long _JWHide	; Hide
	.long _JWHandle	; Handle
	.long _JWNotify ; Notify
	.long _JWGetHints ; Notify

	.long _JWKeyD	; A key down
	.long _JTreeColButton ; Button 
	.long _JWRButton ; Right button (menu)
	.long _JWMotion	; Motion
	.long _JWBound ; Boundary
	.long _JWNotice	; Notice
	
	.)

	.)
	
