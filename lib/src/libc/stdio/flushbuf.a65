
	.xl
	.al

	.(

	.include <65816.i65>
	.include <stdio.i65>
	.include <fsys.i65>
	.include <lcc.i65>

	mreg = 1
	mreg2 = 5

	.text
	.pic
+_do_write
-_do_write:

	.(

RZ 	= 0

c	= RZ+1
LZ 	= RZ+2

fd	= 5+LZ
buf	= 7+LZ
nbytes	= 11+LZ

	!PRO LZ
	bra noinc
L2:
	lda nbytes
	sec
	sbc c
	sta nbytes
	lda buf
	clc
	adc c
	sta buf
	bcc noinc
	inc buf+2
noinc	pei (nbytes)
	pei (buf+2)
	pei (buf)
	pei (fd)
	jsr @_write
	!POP 8
	
	stx c
	lda c
      	bmi nhigh
	lda c
	cmp nbytes
	bmi L2
	ldx #1
	bra L1
nhigh	ldx #0
L1	!POST LZ
	rts
	.)

+___flushbuf
-___flushbuf:

	.(

RZ 	= 4
LZ 	= 10

c1	= RZ+1
count	= RZ+1

c	= 6+LZ
fp	= 8+LZ


	!PRO LZ
	ldx #{__clean
	jsr @S_segoff
	tax
	lda #!___cleanup
	sta __clean,x
	lda #^___cleanup
	sta __clean+2,x
	ldy #FILE_fd
	lda [fp],y
	bmi eofex2
	
	ldy #FILE_flags
	lda [fp],y
	and #F_IOWRITE
	beq eofex2
	
	lda [fp],y
	and #F_IOREADING
	beq L14
	lda [fp],y
	and #F_IOEOF
	beq eofex2	
L14
	lda [fp],y
	and #$ffff-F_IOREADING
	ora #F_IOWRITING
	sta [fp],y
	and #F_IONBF
	beq hasabuf
	!jne gotbuf
eofex2	!jra eofex
	
hasabuf	ldy #FILE_buf
	lda [fp],y
	iny
	iny
	ora [fp],y
	!jne gotbuf
	
hasnbuf	ldy #FILE_fd
	lda [fp],y
	cmp #1
	bne nostdout
	pha
	jsr @_isatty
	pla
	cpx #1
	bne nostdout
	ldy #FILE_flags
	lda [fp],y
	ora #F_IOLBF
	sta [fp],y
nostdout	pea 0
	pea BUFSIZ
	jsr @_malloc
	pla
	pla
	tya
	ldy #FILE_buf+2
	sta [fp],y
	txa
	dey
	dey
	sta [fp],y
	iny
	iny
	ora [fp],y
	bne L24
	
	ldy #FILE_flags
	lda [fp],y
	ora #F_IONBF
	sta [fp],y
	bra L25
L24:
	ldy #FILE_flags
	lda [fp],y
	ora #F_IOMYBUF
	sta [fp],y
	lda #BUFSIZ
	ldy #FILE_bufsiz
	sta [fp],y
	
	ldy #FILE_flags
	lda [fp],y
	and #F_IOLBF
	bne isLB
	lda #BUFSIZ-1
	bra L27
isLB	lda #-1
L27	sta [fp]

L25	ldy #FILE_buf
	lda [fp],y
	ldy #FILE_ptr
	sta [fp],y
	ldy #FILE_buf+2
	lda [fp],y
	ldy #FILE_ptr+2
	sta [fp],y

gotbuf
	ldy #FILE_flags
	lda [fp],y
	and #F_IONBF
	beq L28
	
	lda c
	and #$ff
	sta c1

	lda #0
	sta [fp]
	
/* TODO F_IOAPPEND	*/
	
L30:
	pea 1
	pea 0
	tdc
	clc
	adc #c1
	pha

	ldy #FILE_fd
	lda [fp],y
	pha
	jsr @_write
	!POP 8	
	cpx #1
	!jne errex
	ldx c
	brl L9
	
L28:	lda [fp],y
	and #F_IOLBF
	!jeq L36
	
	ldy #FILE_ptr+2
	lda [fp],y
	sta mreg+2
	ldy #FILE_ptr
	lda [fp],y
	sta mreg
	inc
	sta [fp],y
	bne noinc
	lda mreg+2
	ldy #FILE_ptr+2
	inc
	sta [fp],y
noinc	lda c
	!AS
	sta [mreg]
	!AL

	lda c
	cmp #10
	beq doret
	
	ldy #FILE_bufsiz
	lda [fp],y
	eor #-1
	inc
	cmp [fp]
	!jne L37

doret
/* TODO - F_IOAPPEND */

	lda [fp]
	eor #-1
	inc
	pha
	
	ldy #FILE_buf+2
	lda [fp],y
	pha
	dey
	dey
	lda [fp],y
	pha
	ldy #FILE_fd
	lda [fp],y
	pha
	jsr _do_write
	!POP 8
	cpx #0
	!jeq errex
	
	ldy #FILE_buf
	lda [fp],y
	ldy #FILE_ptr
	sta [fp],y
	ldy #FILE_buf+2
	lda [fp],y
	ldy #FILE_ptr+2
	sta [fp],y
	lda #0
	sta [fp]
	brl L37
	
L36:
	ldy #FILE_ptr
	lda [fp],y
	ldy #FILE_buf
	sec
	sbc [fp],y
	sta count
	
	ldy #FILE_bufsiz
	lda [fp],y
	dec
	sta [fp]
	
	ldy #FILE_buf
	lda [fp],y
	ldy #FILE_ptr
	clc
	adc #1
	sta [fp],y
	ldy #FILE_buf+2
	lda [fp],y
	adc #0
	ldy #FILE_ptr+2
	sta [fp],y
	
	lda count
	bmi L47
	beq L47

/* TODO F_IOAPPEND */
	
	pei (count)
	ldy #FILE_buf+2
	lda [fp],y
	pha
	dey
	dey
	lda [fp],y
	pha
	ldy #FILE_fd
	lda [fp],y
	pha
	jsr _do_write
	!POP 8
	cpx #0
	beq errex
L47:
	ldy #FILE_buf
	lda [fp],y
	sta mreg
	iny
	iny
	lda [fp],y
	sta mreg+2
	lda c
	!AS
	sta [mreg]
	!AL
L37:
	ldx c
	bra L9

errex	ldy #FILE_flags
	lda [fp],y
	ora #F_IOERR
	sta [fp],y
eofex	ldx #-1
L9:
	!POST LZ
	rtl
	.)

&_isatty	.(

stat	= 1
LZ	= STAT_SIZE

fdnum	= LZ + 6

	!PRO LZ
	pea 0
	tdc
	clc
	adc #stat
	pha
	pei (fdnum)
	jsr @_fstat
	pla
	pla
	pla
	cpx #-1
	beq notty
	lda stat+STAT_Mode
	and #DT_BITS
	cmp #DT_CHR
	bne notty
	ldx #1
	bra exeet
notty	ldx #0
exeet	!POST LZ
	rtl
	.)
	
	.)
