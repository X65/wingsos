	
	.text
	.pic
/* Console library */

	.(

	.al
	.xl
	
	.include	<65816.i65>
	.include	<lcc.i65>
	.include	<kern.i65>
	.include	<proc.i65>
	.include	<conlib.i65>
	.include 	<termio.i65>
	.include	<stdio.i65>

&_con_nosig	.(
	.abs 1
tio	.dsb TIOS_SIZE	
fp	.long 4
LZ	= *-1
	.dsb 5
	.text
	
	!PRO LZ	
	ldx #{_con_FILE
	jsr @S_segoff
	tax
	lda _con_FILE,x
	sta fp
	lda _con_FILE+2,x
	sta fp+2
	pea 0
	tdc
	clc
	adc #tio
	pha
	ldy #FILE_fd
	lda [fp],y
	pha
	jsr @_gettio
	pla
	pla
	pla
	
	lda tio+TIOS_Flags
	and #$ffff-(TF_ISIG)
	sta tio+TIOS_Flags
	pea 0
	tdc
	clc
	adc #tio
	pha
	ldy #FILE_fd
	lda [fp],y
	pha
	jsr @_settio
	!POST LZ+6
	rtl

	.)
	
&_con_setout
	.(

	.abs 1
LZ	= *-1
	.dsb 5
fp	.long 4
	.text

	!PRO LZ
	ldx #{_con_FILE
	jsr @S_segoff
	tax
	lda fp
	sta _con_FILE,x
	lda fp+2
	sta _con_FILE+2,x
	!POST LZ
	rtl
	.)
	
&_con_init	
	.(

	.abs 1
tio	.dsb TIOS_SIZE
fp	.long 4
LZ	= *-1
	.dsb 5
	.text

	!PRO LZ
	ldx #{_con_FILE
	jsr @S_segoff
	tax
	lda _con_FILE,x
	sta fp
	lda _con_FILE+2,x
	sta fp+2
	pea 0
	tdc
	clc
	adc #tio
	pha
	ldy #FILE_fd
	lda [fp],y
	pha
	jsr @_gettio
	!POP 6
	
	ldx #{_con_xsize
	jsr @S_segoff
	tax
	lda tio+TIOS_Cols
	sta _con_xsize,x
	lda tio+TIOS_Rows
	sta _con_ysize,x
	lda tio+TIOS_Flags
	and #$ffff-(TF_ICANON+TF_ECHONL+TF_ECHO+TF_ICRLF)
	ora #TF_OPOST
	sta tio+TIOS_Flags
	lda #1
	sta tio+TIOS_MIN
	pea 0
	tdc
	clc
	adc #tio
	pha
	ldy #FILE_fd
	lda [fp],y
	pha
	jsr @_settio
	!POP 6
		
	pea 2048
	pea F_IOFBF
	pea 0
	pea 0
	pei (fp+2)
	pei (fp)
	jsr @_setvbuf
	!POST 12+LZ
	rtl
	.)
	
&_con_gotoxy .(
	.abs 1
LZ	= *-1
	.dsb 5
x	.word 2
y	.word 2
	.text
	!PRO LZ
	lda x
	inc
	pha
	lda y
	inc
	pha
	pea ^xygoto
	pea !xygoto
	ldx #{_con_FILE
	jsr @S_segoff
	tax
	lda _con_FILE+2,x
	pha
	lda _con_FILE,x
	pha
	jsr @_fprintf
	!POST LZ+12
	rtl
	
xygoto	.asc ESC,"[%d;%dH",0
	.)

&_con_setfg .(
	
LZ	= 0
col	= LZ+6
col2	= LZ+8

	!PRO LZ
	lda col
	asl
	tax
	lda #30
	jsr do1
exeet	!POST LZ
	rtl

&&_con_setbg
	
	!PRO LZ
	lda col
	asl
	tax
	lda #40
	jsr do1
	bra exeet

&&_con_setfgbg
	
	!PRO LZ
	lda col
	asl
	tax
	lda #30
	jsr do1
	lda col2
	asl
	tax
	lda #40
	jsr do1
	bra exeet

do1	!AS
	adc @ansiconv,x
	!AL
	and #$ff
	pha
	lda @ansiconv+1,x
	and #$ff
	pha
	pea ^docol
	pea !docol
	ldx #{_con_FILE
	jsr @S_segoff
	tax
	lda _con_FILE+2,x
	pha
	lda _con_FILE,x
	pha
	jsr @_fprintf
	!POP 12
	rts
	
docol	.asc ESC,"[%d;%dm",0
ansiconv .byte 0, 0
	.byte 7, 1
	.byte 1, 0
	.byte 6, 0
	.byte 5, 0
	.byte 2, 0
	.byte 4, 0
	.byte 3, 1
	.byte 3, 0
	.byte 3, 0
	.byte 1, 1
	.byte 0, 1
	.byte 7, 0
	.byte 2, 1
	.byte 4, 1
	.byte 7, 0
	.)

&_con_setscroll .(
	.abs 1
LZ	= *-1
	.dsb 5
top	.word 2
bottom	.word 2
	.text

	!PRO LZ
	pei (bottom)
	lda top
	inc
	pha
	pea ^scrreg
	pea !scrreg
	ldx #{_con_FILE
	jsr @S_segoff
	tax
	lda _con_FILE+2,x
	pha
	lda _con_FILE,x
	pha
	jsr @_fprintf
	!POST LZ+12
	rtl
	
scrreg	.asc ESC,"[%d;%dr",0
	.)

&_con_clrline .(
	.abs 1
LZ	= *-1
	.dsb 5
which	.word 2
	.text

	!PRO LZ
	pei (which)
	pea ^lineclr
	pea !lineclr
	ldx #{_con_FILE
	jsr @S_segoff
	tax
	lda _con_FILE+2,x
	pha
	lda _con_FILE,x
	pha
	jsr @_fprintf
	!POST LZ+10
	rtl
	
lineclr	.asc ESC,"[%dK",0
	.)

&_con_clrscr .(
	
	pea ^clrscr
	pea !clrscr
	ldx #{_con_FILE
	jsr @S_segoff
	tax
	lda _con_FILE+2,x
	pha
	lda _con_FILE,x
	pha
	jsr @_fprintf
	!POP 8
	rtl

clrscr	.asc ESC,"[H",ESC,"[2J",0
	.)

&_con_getkey 
	.(
	jsr dogetch
	cpx #ESC
	bne nesc
	jsr dogetch
	cpx #"["
	bne nesc
	jsr dogetch
	cpx #"D"+1
	bcs nesc
	cpx #"A"
	bcc nesc
	txa
	clc
	adc #CURU-"A"
	tax
nesc	rtl
	
dogetch	ldx #{___stdin
	lda #___stdin
	jsr @S_segptr
	pha
	phy
	jsr @_fgetc
	!POP 4
	rts
	.)

&_con_end	.(
	ldx #{_con_ysize
	jsr @S_segoff
	tax
	lda _con_ysize,x
	pha
	pea 0
	jsr @_con_setscroll
	pla
	pla
	ldx #{_con_FILE
	jsr @S_segoff
	tax
	lda _con_FILE+2,x
	pha
	lda _con_FILE,x
	pha	
	jsr @_fflush
	pla
	pla
	rtl
	.)
	
&_con_update	
	.(
	ldx #{_con_FILE
	jsr @S_segoff
	tax
	lda _con_FILE+2,x
	pha
	lda _con_FILE,x
	pha	
	jsr @_fflush
	pla
	pla
	rtl
	.)
	
	.data
	
&_con_xsize	.word 80
&_con_ysize	.word 25
&_con_FILE	.long ___stdout

	.)
